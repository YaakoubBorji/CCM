---
swagger: "2.0"
info:
  description: |
    This is a documentation of cryptocurrency API
  version: 1.0.0
  title: Cryptocurrency Market Backend
  termsOfService: http://swagger.io/terms/
  contact:
    email: borji.yacoub@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /YaakoubBorji/CMB/1.0.0
schemes:
- https
- http
paths:
  /register:
    post:
      tags:
      - user
      summary: Add a new user to the system
      operationId: addUser
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: User object that needs to be added to the system
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        "405":
          description: Invalid input
  /user:
    get:
      tags:
      - user
      summary: Returs current user details.
      operationId: getCurrentUser
      produces:
      - application/json
      - application/xml
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Invalid username/password supplied
      security:
      - cookieAuth: []
  /user/{username}:
    get:
      tags:
      - user
      summary: Get user by user name
      operationId: getUserByName
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: The name that needs to be fetched. Use user1 for testing.
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      security:
      - cookieAuth: []
  /market:
    post:
      tags:
      - market
      summary: Add a new sell position
      operationId: addPosition
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: adds new sell position
        required: true
        schema:
          $ref: '#/definitions/Position'
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        "405":
          description: Invalid input
      security:
      - cookieAuth: []
  /market/buy/{id}:
    post:
      tags:
      - market
      summary: buys open new sell position
      operationId: buyPosition
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: ID of position that needs to be buyed
        required: true
        type: integer
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        "405":
          description: Invalid input
      security:
      - cookieAuth: []
  /market/{id}:
    get:
      tags:
      - market
      summary: find open or sold position by ID
      operationId: getPositionById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: The ID that needs to be fetched. Use get list for position.
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Position'
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      security:
      - cookieAuth: []
    delete:
      tags:
      - market
      summary: Delete sell position
      description: delete sell position if it was opened by current user or if user has administartor role.
      operationId: deletePosition
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: The name that needs to be deleted
        required: true
        type: integer
      responses:
        "400":
          description: Invalid id supplied
        "404":
          description: position not found
securityDefinitions:
  cookieAuth:
    type: apiKey
    name: JSESSIONID
    in: header
definitions:
  Position:
    type: object
    properties:
      id:
        type: integer
        format: int64
      currency:
        type: string
      amount:
        type: integer
        format: int64
      user:
        $ref: '#/definitions/User'
      status:
        type: string
        description: currency Status
        enum:
        - open
        - sold
    xml:
      name: position
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      familyName:
        type: string
      role:
        $ref: '#/definitions/Role'
    xml:
      name: User
  Role:
    type: string
    enum:
    - ADMINISTRATOR
    - USER
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
